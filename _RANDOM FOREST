{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "bfee7868",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import warnings \n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c8e7c9f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "data=pd.read_csv(\"bank_1.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c720dfae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>deposit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2343</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1042</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>56</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>45</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>1270</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1389</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>services</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2476</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>579</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>no</td>\n",
       "      <td>184</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>673</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age         job  marital  education default  balance housing loan  contact  \\\n",
       "0   59      admin.  married  secondary      no     2343     yes   no  unknown   \n",
       "1   56      admin.  married  secondary      no       45      no   no  unknown   \n",
       "2   41  technician  married  secondary      no     1270     yes   no  unknown   \n",
       "3   55    services  married  secondary      no     2476     yes   no  unknown   \n",
       "4   54      admin.  married   tertiary      no      184      no   no  unknown   \n",
       "\n",
       "   day month  duration  campaign  pdays  previous poutcome deposit  \n",
       "0    5   may      1042         1     -1         0  unknown     yes  \n",
       "1    5   may      1467         1     -1         0  unknown     yes  \n",
       "2    5   may      1389         1     -1         0  unknown     yes  \n",
       "3    5   may       579         1     -1         0  unknown     yes  \n",
       "4    5   may       673         2     -1         0  unknown     yes  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2af837f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>deposit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11157</th>\n",
       "      <td>33</td>\n",
       "      <td>blue-collar</td>\n",
       "      <td>single</td>\n",
       "      <td>primary</td>\n",
       "      <td>no</td>\n",
       "      <td>1</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>20</td>\n",
       "      <td>apr</td>\n",
       "      <td>257</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11158</th>\n",
       "      <td>39</td>\n",
       "      <td>services</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>733</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>16</td>\n",
       "      <td>jun</td>\n",
       "      <td>83</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11159</th>\n",
       "      <td>32</td>\n",
       "      <td>technician</td>\n",
       "      <td>single</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>29</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>19</td>\n",
       "      <td>aug</td>\n",
       "      <td>156</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11160</th>\n",
       "      <td>43</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>yes</td>\n",
       "      <td>cellular</td>\n",
       "      <td>8</td>\n",
       "      <td>may</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>5</td>\n",
       "      <td>failure</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11161</th>\n",
       "      <td>34</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>0</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>cellular</td>\n",
       "      <td>9</td>\n",
       "      <td>jul</td>\n",
       "      <td>628</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>no</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       age          job  marital  education default  balance housing loan  \\\n",
       "11157   33  blue-collar   single    primary      no        1     yes   no   \n",
       "11158   39     services  married  secondary      no      733      no   no   \n",
       "11159   32   technician   single  secondary      no       29      no   no   \n",
       "11160   43   technician  married  secondary      no        0      no  yes   \n",
       "11161   34   technician  married  secondary      no        0      no   no   \n",
       "\n",
       "        contact  day month  duration  campaign  pdays  previous poutcome  \\\n",
       "11157  cellular   20   apr       257         1     -1         0  unknown   \n",
       "11158   unknown   16   jun        83         4     -1         0  unknown   \n",
       "11159  cellular   19   aug       156         2     -1         0  unknown   \n",
       "11160  cellular    8   may         9         2    172         5  failure   \n",
       "11161  cellular    9   jul       628         1     -1         0  unknown   \n",
       "\n",
       "      deposit  \n",
       "11157      no  \n",
       "11158      no  \n",
       "11159      no  \n",
       "11160      no  \n",
       "11161      no  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3250cfcb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 11162 entries, 0 to 11161\n",
      "Data columns (total 17 columns):\n",
      " #   Column     Non-Null Count  Dtype \n",
      "---  ------     --------------  ----- \n",
      " 0   age        11162 non-null  int64 \n",
      " 1   job        11162 non-null  object\n",
      " 2   marital    11162 non-null  object\n",
      " 3   education  11162 non-null  object\n",
      " 4   default    11162 non-null  object\n",
      " 5   balance    11162 non-null  int64 \n",
      " 6   housing    11162 non-null  object\n",
      " 7   loan       11162 non-null  object\n",
      " 8   contact    11162 non-null  object\n",
      " 9   day        11162 non-null  int64 \n",
      " 10  month      11162 non-null  object\n",
      " 11  duration   11162 non-null  int64 \n",
      " 12  campaign   11162 non-null  int64 \n",
      " 13  pdays      11162 non-null  int64 \n",
      " 14  previous   11162 non-null  int64 \n",
      " 15  poutcome   11162 non-null  object\n",
      " 16  deposit    11162 non-null  object\n",
      "dtypes: int64(7), object(10)\n",
      "memory usage: 1.4+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ab5f24b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age          0\n",
       "job          0\n",
       "marital      0\n",
       "education    0\n",
       "default      0\n",
       "balance      0\n",
       "housing      0\n",
       "loan         0\n",
       "contact      0\n",
       "day          0\n",
       "month        0\n",
       "duration     0\n",
       "campaign     0\n",
       "pdays        0\n",
       "previous     0\n",
       "poutcome     0\n",
       "deposit      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4080a9b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>deposit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2343</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1042</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>56</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>45</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>1270</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1389</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>services</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>no</td>\n",
       "      <td>2476</td>\n",
       "      <td>yes</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>579</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>no</td>\n",
       "      <td>184</td>\n",
       "      <td>no</td>\n",
       "      <td>no</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>673</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age         job  marital  education default  balance housing loan  contact  \\\n",
       "0   59      admin.  married  secondary      no     2343     yes   no  unknown   \n",
       "1   56      admin.  married  secondary      no       45      no   no  unknown   \n",
       "2   41  technician  married  secondary      no     1270     yes   no  unknown   \n",
       "3   55    services  married  secondary      no     2476     yes   no  unknown   \n",
       "4   54      admin.  married   tertiary      no      184      no   no  unknown   \n",
       "\n",
       "   day month  duration  campaign  pdays  previous poutcome deposit  \n",
       "0    5   may      1042         1     -1         0  unknown     yes  \n",
       "1    5   may      1467         1     -1         0  unknown     yes  \n",
       "2    5   may      1389         1     -1         0  unknown     yes  \n",
       "3    5   may       579         1     -1         0  unknown     yes  \n",
       "4    5   may       673         2     -1         0  unknown     yes  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d3fa99d6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['age', 'job', 'marital', 'education', 'default', 'balance', 'housing',\n",
       "       'loan', 'contact', 'day', 'month', 'duration', 'campaign', 'pdays',\n",
       "       'previous', 'poutcome', 'deposit'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a60bea86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['default', 'housing', 'loan', 'deposit']"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "selected_col=['default','housing','loan','deposit']\n",
    "selected_col"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "44f53223",
   "metadata": {},
   "outputs": [],
   "source": [
    "for col in selected_col:\n",
    "    data[col]=data[col].map({\"yes\":1,\"no\":0})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9256c772",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>job</th>\n",
       "      <th>marital</th>\n",
       "      <th>education</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>contact</th>\n",
       "      <th>day</th>\n",
       "      <th>month</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>poutcome</th>\n",
       "      <th>deposit</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>0</td>\n",
       "      <td>2343</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1042</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>56</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41</td>\n",
       "      <td>technician</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>0</td>\n",
       "      <td>1270</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>1389</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>services</td>\n",
       "      <td>married</td>\n",
       "      <td>secondary</td>\n",
       "      <td>0</td>\n",
       "      <td>2476</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>579</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>admin.</td>\n",
       "      <td>married</td>\n",
       "      <td>tertiary</td>\n",
       "      <td>0</td>\n",
       "      <td>184</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>5</td>\n",
       "      <td>may</td>\n",
       "      <td>673</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>unknown</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   age         job  marital  education  default  balance  housing  loan  \\\n",
       "0   59      admin.  married  secondary        0     2343        1     0   \n",
       "1   56      admin.  married  secondary        0       45        0     0   \n",
       "2   41  technician  married  secondary        0     1270        1     0   \n",
       "3   55    services  married  secondary        0     2476        1     0   \n",
       "4   54      admin.  married   tertiary        0      184        0     0   \n",
       "\n",
       "   contact  day month  duration  campaign  pdays  previous poutcome  deposit  \n",
       "0  unknown    5   may      1042         1     -1         0  unknown        1  \n",
       "1  unknown    5   may      1467         1     -1         0  unknown        1  \n",
       "2  unknown    5   may      1389         1     -1         0  unknown        1  \n",
       "3  unknown    5   may       579         1     -1         0  unknown        1  \n",
       "4  unknown    5   may       673         2     -1         0  unknown        1  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "6fc368c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>day</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>...</th>\n",
       "      <th>month_jul</th>\n",
       "      <th>month_jun</th>\n",
       "      <th>month_mar</th>\n",
       "      <th>month_may</th>\n",
       "      <th>month_nov</th>\n",
       "      <th>month_oct</th>\n",
       "      <th>month_sep</th>\n",
       "      <th>poutcome_other</th>\n",
       "      <th>poutcome_success</th>\n",
       "      <th>poutcome_unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>2343</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1042</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41</td>\n",
       "      <td>0</td>\n",
       "      <td>1270</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1389</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>2476</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>579</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>184</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>673</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11157</th>\n",
       "      <td>33</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>257</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11158</th>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>733</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>16</td>\n",
       "      <td>83</td>\n",
       "      <td>4</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11159</th>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>156</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11160</th>\n",
       "      <td>43</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>172</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11161</th>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>628</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11162 rows × 43 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       age  default  balance  housing  loan  day  duration  campaign  pdays  \\\n",
       "0       59        0     2343        1     0    5      1042         1     -1   \n",
       "1       56        0       45        0     0    5      1467         1     -1   \n",
       "2       41        0     1270        1     0    5      1389         1     -1   \n",
       "3       55        0     2476        1     0    5       579         1     -1   \n",
       "4       54        0      184        0     0    5       673         2     -1   \n",
       "...    ...      ...      ...      ...   ...  ...       ...       ...    ...   \n",
       "11157   33        0        1        1     0   20       257         1     -1   \n",
       "11158   39        0      733        0     0   16        83         4     -1   \n",
       "11159   32        0       29        0     0   19       156         2     -1   \n",
       "11160   43        0        0        0     1    8         9         2    172   \n",
       "11161   34        0        0        0     0    9       628         1     -1   \n",
       "\n",
       "       previous  ...  month_jul  month_jun  month_mar  month_may  month_nov  \\\n",
       "0             0  ...          0          0          0          1          0   \n",
       "1             0  ...          0          0          0          1          0   \n",
       "2             0  ...          0          0          0          1          0   \n",
       "3             0  ...          0          0          0          1          0   \n",
       "4             0  ...          0          0          0          1          0   \n",
       "...         ...  ...        ...        ...        ...        ...        ...   \n",
       "11157         0  ...          0          0          0          0          0   \n",
       "11158         0  ...          0          1          0          0          0   \n",
       "11159         0  ...          0          0          0          0          0   \n",
       "11160         5  ...          0          0          0          1          0   \n",
       "11161         0  ...          1          0          0          0          0   \n",
       "\n",
       "       month_oct  month_sep  poutcome_other  poutcome_success  \\\n",
       "0              0          0               0                 0   \n",
       "1              0          0               0                 0   \n",
       "2              0          0               0                 0   \n",
       "3              0          0               0                 0   \n",
       "4              0          0               0                 0   \n",
       "...          ...        ...             ...               ...   \n",
       "11157          0          0               0                 0   \n",
       "11158          0          0               0                 0   \n",
       "11159          0          0               0                 0   \n",
       "11160          0          0               0                 0   \n",
       "11161          0          0               0                 0   \n",
       "\n",
       "       poutcome_unknown  \n",
       "0                     1  \n",
       "1                     1  \n",
       "2                     1  \n",
       "3                     1  \n",
       "4                     1  \n",
       "...                 ...  \n",
       "11157                 1  \n",
       "11158                 1  \n",
       "11159                 1  \n",
       "11160                 0  \n",
       "11161                 1  \n",
       "\n",
       "[11162 rows x 43 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=pd.get_dummies(data,columns=[\"job\",\"marital\",\"education\",\"contact\",\"month\",\"poutcome\"],drop_first=True,dtype=\"int64\")\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8a72925b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>default</th>\n",
       "      <th>balance</th>\n",
       "      <th>housing</th>\n",
       "      <th>loan</th>\n",
       "      <th>day</th>\n",
       "      <th>duration</th>\n",
       "      <th>campaign</th>\n",
       "      <th>pdays</th>\n",
       "      <th>previous</th>\n",
       "      <th>...</th>\n",
       "      <th>month_jul</th>\n",
       "      <th>month_jun</th>\n",
       "      <th>month_mar</th>\n",
       "      <th>month_may</th>\n",
       "      <th>month_nov</th>\n",
       "      <th>month_oct</th>\n",
       "      <th>month_sep</th>\n",
       "      <th>poutcome_other</th>\n",
       "      <th>poutcome_success</th>\n",
       "      <th>poutcome_unknown</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>2343</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1042</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>45</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1467</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>41</td>\n",
       "      <td>0</td>\n",
       "      <td>1270</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>1389</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>2476</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>579</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>54</td>\n",
       "      <td>0</td>\n",
       "      <td>184</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>673</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   age  default  balance  housing  loan  day  duration  campaign  pdays  \\\n",
       "0   59        0     2343        1     0    5      1042         1     -1   \n",
       "1   56        0       45        0     0    5      1467         1     -1   \n",
       "2   41        0     1270        1     0    5      1389         1     -1   \n",
       "3   55        0     2476        1     0    5       579         1     -1   \n",
       "4   54        0      184        0     0    5       673         2     -1   \n",
       "\n",
       "   previous  ...  month_jul  month_jun  month_mar  month_may  month_nov  \\\n",
       "0         0  ...          0          0          0          1          0   \n",
       "1         0  ...          0          0          0          1          0   \n",
       "2         0  ...          0          0          0          1          0   \n",
       "3         0  ...          0          0          0          1          0   \n",
       "4         0  ...          0          0          0          1          0   \n",
       "\n",
       "   month_oct  month_sep  poutcome_other  poutcome_success  poutcome_unknown  \n",
       "0          0          0               0                 0                 1  \n",
       "1          0          0               0                 0                 1  \n",
       "2          0          0               0                 0                 1  \n",
       "3          0          0               0                 0                 1  \n",
       "4          0          0               0                 0                 1  \n",
       "\n",
       "[5 rows x 42 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=data.drop([\"deposit\"],axis=1)\n",
    "y=data[\"deposit\"]\n",
    "x.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "12d7f472",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        1\n",
       "1        1\n",
       "2        1\n",
       "3        1\n",
       "4        1\n",
       "        ..\n",
       "11157    0\n",
       "11158    0\n",
       "11159    0\n",
       "11160    0\n",
       "11161    0\n",
       "Name: deposit, Length: 11162, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "f23c95b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x_train (8929, 42)\n",
      "x_test (2233, 42)\n",
      "y_train (8929,)\n",
      "y_test (2233,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2,shuffle=True)\n",
    "print(f\"x_train {x_train.shape}\")\n",
    "print(f\"x_test {x_test.shape}\")\n",
    "print(f\"y_train {y_train.shape}\")\n",
    "print(f\"y_test {y_test.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "241077e3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "36ef5cb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bank_rf=RandomForestClassifier()\n",
    "bank_rf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bd2deadf",
   "metadata": {},
   "outputs": [],
   "source": [
    "bank_rf.fit(x_train,y_train)\n",
    "y_predict=bank_rf.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d51bbe3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 1, ..., 1, 0, 0], dtype=int64)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_predict"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "394d3693",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "3fe25307",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.89      0.83      0.86      1187\n",
      "           1       0.82      0.88      0.85      1046\n",
      "\n",
      "    accuracy                           0.86      2233\n",
      "   macro avg       0.86      0.86      0.86      2233\n",
      "weighted avg       0.86      0.86      0.86      2233\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test,y_predict))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "82d63356",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "c7f4209f",
   "metadata": {},
   "outputs": [],
   "source": [
    "select_models=[LogisticRegression(),\n",
    "              DecisionTreeClassifier(max_depth=None,min_samples_leaf=1,min_samples_split=10),\n",
    "              RandomForestClassifier(max_depth=None,min_samples_leaf=1,min_samples_split=10,n_estimators=350)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "30bef3c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "dbc4320c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy 0.7913121361397224 of model is LogisticRegression()\n",
      "accuracy 0.7917599641737573 of model is DecisionTreeClassifier(min_samples_split=10)\n",
      "accuracy 0.8566950291088222 of model is RandomForestClassifier(min_samples_split=10, n_estimators=350)\n"
     ]
    }
   ],
   "source": [
    "for model in select_models:\n",
    "    model.fit(x_train,y_train)\n",
    "    y_pred=model.predict(x_test)\n",
    "    print(f\"accuracy {accuracy_score(y_pred,y_test)} of model is {model}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "b2d00039",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy 0.7913121361397224 of model is LogisticRegression()\n",
      "[0.7913121361397224]\n",
      "accuracy 0.7948947604120018 of model is DecisionTreeClassifier(min_samples_split=10)\n",
      "[0.7913121361397224, 0.7948947604120018]\n",
      "accuracy 0.8549037169726825 of model is RandomForestClassifier(min_samples_split=10, n_estimators=350)\n",
      "[0.7913121361397224, 0.7948947604120018, 0.8549037169726825]\n"
     ]
    }
   ],
   "source": [
    "acc=[]\n",
    "for model in select_models:\n",
    "    model.fit(x_train,y_train)\n",
    "    y_pred=model.predict(x_test)\n",
    "    print(f\"accuracy {accuracy_score(y_pred,y_test)} of model is {model}\")\n",
    "    acc.append(accuracy_score(y_pred,y_test))\n",
    "    print(acc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "131cc475",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>logistic regression</th>\n",
       "      <th>decision tree</th>\n",
       "      <th>random forest</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>accuracy</th>\n",
       "      <td>0.791312</td>\n",
       "      <td>0.794895</td>\n",
       "      <td>0.854904</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          logistic regression  decision tree  random forest\n",
       "accuracy             0.791312       0.794895       0.854904"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result=[acc]\n",
    "result\n",
    "pd.DataFrame(data=result,columns=([\"logistic regression\",\"decision tree\",\"random forest\"]),index=[\"accuracy\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "4ef3fa3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier()"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rf=RandomForestClassifier()\n",
    "rf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "e277d098",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid={\n",
    "    'n_estimators': [100,200,300,350],\n",
    "    'max_depth' : [None,10,20,30],\n",
    "    'min_samples_split': [2,5,10],\n",
    "    'min_samples_leaf': [1,2,4],\n",
    "    \n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "cdd92f27",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "grid_search=GridSearchCV(estimator=rf,param_grid=param_grid,n_jobs=-1)\n",
    "\n",
    "grid_search.fit(x_train,y_train)\n",
    "\n",
    "best_params = grid_search.best_params_\n",
    "best_model = grid_search.best_estimator_\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9532de72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_depth': None,\n",
       " 'min_samples_leaf': 1,\n",
       " 'min_samples_split': 10,\n",
       " 'n_estimators': 200}"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "best_params"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "4b11093c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Random Hyper Parameter \n",
    "#DecisionTreeClassifier(max_depth=None,min_samples_leaf=2,min_samples_split=5),\n",
    "#RandomForestClassifier(max_depth=None,min_samples_leaf=2,min_samples_split=5,n_estimators=100)]"
   ]
  },
  {
   "attachments": {
    "image.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "82100c08",
   "metadata": {},
   "source": [
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "0645c581",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Grid Search Hyper Parameter \n",
    "#DecisionTreeClassifier(max_depth=None,min_samples_leaf=1,min_samples_split=10),\n",
    "#RandomForestClassifier(max_depth=None,min_samples_leaf=1,min_samples_split=10,n_estimators=350)]"
   ]
  },
  {
   "attachments": {
    "image.png": {
     "image/png": "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"
    }
   },
   "cell_type": "markdown",
   "id": "8daf2191",
   "metadata": {},
   "source": [
    "![image.png](attachment:image.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ff276829",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
